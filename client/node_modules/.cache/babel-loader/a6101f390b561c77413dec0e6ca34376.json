{"ast":null,"code":"import _classCallCheck from \"/Users/cdp/Desktop/code/homework/googlebooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cdp/Desktop/code/homework/googlebooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cdp/Desktop/code/homework/googlebooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cdp/Desktop/code/homework/googlebooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cdp/Desktop/code/homework/googlebooks/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cdp/Desktop/code/homework/googlebooks/client/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport SearchResults from \"../components/SearchResults\";\nimport { Row, Container } from \"../components/Grid\";\nimport { Input, FormBtn } from \"../components/Form\";\n\nvar SearchBooks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBooks, _Component);\n\n  function SearchBooks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBooks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBooks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: \"\",\n      books: []\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        query: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.query) {\n        API.getGoogleBooks(_this.state.query).then(function (res) {\n          var results = res.data.items;\n          results = results.map(function (result) {\n            result = {\n              key: result.id,\n              id: result.id,\n              title: result.volumeInfo.title,\n              author: result.volumeInfo.author,\n              description: result.volumeInfo.description,\n              image: result.volumeInfo.imageLinks.thumbnail,\n              link: result.volumeInfo.infoLink\n            };\n            return result;\n          });\n\n          _this.setState({\n            books: results\n          });\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.handleSaveButton = function (event) {\n      event.preventDefault();\n      console.log(_this.state.books);\n\n      var savedBooks = _this.state.books.filter(function (book) {\n        return book.id === event.target.id;\n      });\n\n      savedBooks = savedBooks[0];\n      API.saveBook(savedBooks).then(_this.setState({\n        message: alert(\"Your book is saved\")\n      })).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBooks, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Find books using the GoogleBooks API\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.query,\n        name: \"query\",\n        placeholder: \"Enter book title\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !this.state.query,\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Search for book!\")))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(SearchResults, {\n        books: this.state.books,\n        handleSaveButton: this.handleSaveButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SearchBooks;\n}(Component);\n\nexport default SearchBooks;","map":{"version":3,"sources":["/Users/cdp/Desktop/code/homework/googlebooks/client/src/pages/Search.js"],"names":["React","Component","Jumbotron","API","SearchResults","Row","Container","Input","FormBtn","SearchBooks","state","query","books","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","getGoogleBooks","then","res","results","data","items","map","result","key","id","title","volumeInfo","author","description","image","imageLinks","thumbnail","link","infoLink","catch","err","console","log","handleSaveButton","savedBooks","filter","book","saveBook","message","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport SearchResults from \"../components/SearchResults\";\nimport { Row, Container } from \"../components/Grid\";\nimport { Input, FormBtn } from \"../components/Form\";\n\nclass SearchBooks extends Component {\n  state = {\n    query: \"\",\n    books: []\n  };\n\n  handleInputChange = event => {\n    this.setState({ query: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.query) {\n      API.getGoogleBooks(this.state.query).then(res => {\n        let results = res.data.items\n\n        results = results.map(result => {\n          result = {\n            key: result.id,\n            id: result.id,\n            title: result.volumeInfo.title,\n            author: result.volumeInfo.author,\n            description: result.volumeInfo.description,\n            image: result.volumeInfo.imageLinks.thumbnail,\n            link: result.volumeInfo.infoLink\n          }\n          return result;\n          \n        })\n        this.setState({books: results})\n      }).catch(err => console.log(err))\n    }\n  };\n\n  handleSaveButton = event => {\n    event.preventDefault();\n        console.log(this.state.books)\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\n        savedBooks = savedBooks[0];\n        API.saveBook(savedBooks)\n            .then(this.setState({ message: alert(\"Your book is saved\") }))\n            .catch(err => console.log(err))\n  };\n\n  render() {\n    return (\n      <>\n        <Container fluid>\n          <Jumbotron>\n            <h1>Find books using the GoogleBooks API</h1>\n          </Jumbotron>\n          <Row>\n            <form>\n              <Input\n                value={this.state.query}\n                name=\"query\"\n                placeholder=\"Enter book title\"\n                onChange={this.handleInputChange}\n              />\n              <FormBtn\n                disabled={!this.state.query}\n                onClick={this.handleFormSubmit}\n              >\n                Search for book!\n              </FormBtn>\n            </form>\n          </Row>\n        </Container>\n        <Container>\n          <Row>\n            <SearchResults\n              books={this.state.books} handleSaveButton={this.handleSaveButton}\n            />\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default SearchBooks\n"]},"metadata":{},"sourceType":"module"}